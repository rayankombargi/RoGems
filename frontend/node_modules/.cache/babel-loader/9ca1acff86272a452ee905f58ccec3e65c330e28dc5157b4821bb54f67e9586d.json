{"ast":null,"code":"import'./Category.css';import React,{useEffect,useState}from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function Category(_ref){let{experiences,genre,onSelectExperience}=_ref;const handleSelectExperience=experience_id=>{onSelectExperience(experience_id);};const[experiencesPerPage,setExperiencesPerPage]=useState(5);const[currentExperiencesPageLength,setcurrentExperiencesPageLength]=useState(experiencesPerPage);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(Math.ceil(experiences.length/experiencesPerPage));useEffect(()=>{const currentLength=currentPage*experiencesPerPage-(currentPage*experiencesPerPage-experiencesPerPage);setcurrentExperiencesPageLength(currentLength);const total=Math.ceil(experiences.length/experiencesPerPage);setTotalPages(total);},[]);const handlePreviousPage=()=>{currentPage===1?setCurrentPage(1):setCurrentPage(currentPage-1);};const handleNextPage=()=>{currentPage===totalPages?setCurrentPage(totalPages):setCurrentPage(currentPage+1);};const handleCheckNextPage=()=>{return currentExperiencesPageLength<experiencesPerPage;};return/*#__PURE__*/_jsxs(\"div\",{className:\"Category\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",genre,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-list\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePreviousPage,className:\"previous-button\",children:\" Prev \"}),experiences.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"experience-list\",children:experiences.filter(exp=>exp.genre===genre||exp.genre_l1===genre||exp.genre_l2===genre).slice(currentPage*experiencesPerPage-experiencesPerPage,currentPage*experiencesPerPage).map((exp,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSelectExperience(exp.rootPlaceId),className:\"experience-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:exp.icon,className:\"experience-icon\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"experience-name\",children:exp.name})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-list\",children:/*#__PURE__*/_jsx(\"h2\",{children:\" No experiences found \"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,className:\"next-button\",disabled:handleCheckNextPage,children:\" Next \"})]})]});}export default Category;","map":{"version":3,"names":["React","useEffect","useState","jsxs","_jsxs","jsx","_jsx","Category","_ref","experiences","genre","onSelectExperience","handleSelectExperience","experience_id","experiencesPerPage","setExperiencesPerPage","currentExperiencesPageLength","setcurrentExperiencesPageLength","currentPage","setCurrentPage","totalPages","setTotalPages","Math","ceil","length","currentLength","total","handlePreviousPage","handleNextPage","handleCheckNextPage","className","children","onClick","filter","exp","genre_l1","genre_l2","slice","map","index","rootPlaceId","src","icon","name","disabled"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/Category/Category.jsx"],"sourcesContent":["import './Category.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Category({experiences, genre, onSelectExperience}) {\r\n\r\n    const handleSelectExperience = (experience_id) => {\r\n        onSelectExperience(experience_id);\r\n    }\r\n\r\n    const [experiencesPerPage, setExperiencesPerPage] = useState(5);\r\n    const [currentExperiencesPageLength, setcurrentExperiencesPageLength] = useState(experiencesPerPage);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(Math.ceil(experiences.length / experiencesPerPage));\r\n    useEffect(() => {\r\n        const currentLength = currentPage * experiencesPerPage - (currentPage * experiencesPerPage - experiencesPerPage);\r\n        setcurrentExperiencesPageLength(currentLength);\r\n\r\n        const total = Math.ceil(experiences.length / experiencesPerPage);\r\n        setTotalPages(total);\r\n    }, []);\r\n\r\n\r\n    const handlePreviousPage = () => {\r\n        currentPage === 1 ? setCurrentPage(1) : setCurrentPage(currentPage - 1);\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n        currentPage === totalPages ? setCurrentPage(totalPages) : setCurrentPage(currentPage + 1);\r\n    }\r\n\r\n    const handleCheckNextPage = () => {\r\n        return currentExperiencesPageLength < experiencesPerPage;\r\n    }\r\n\r\n    return (\r\n        <div className='Category'>\r\n            <h1> {genre} </h1>\r\n            <div className='category-list'>\r\n                <button onClick={handlePreviousPage} className='previous-button'> Prev </button>\r\n                {experiences.length > 0 ? (\r\n                    <div className='experience-list'>\r\n                        {experiences\r\n                        .filter(exp => exp.genre === genre || exp.genre_l1 === genre || exp.genre_l2 === genre)\r\n                        .slice(currentPage * experiencesPerPage - experiencesPerPage, currentPage * experiencesPerPage)\r\n                        .map((exp, index) => (\r\n                                <div key={index} onClick={() => handleSelectExperience(exp.rootPlaceId)} className='experience-item'>\r\n                                    <img src={exp.icon} className='experience-icon' />\r\n                                    <h2 className='experience-name'>{exp.name}</h2>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className='empty-list'>\r\n                        <h2 > No experiences found </h2>\r\n                    </div>\r\n                )}\r\n                <button onClick={handleNextPage} className='next-button' disabled={handleCheckNextPage}> Next </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
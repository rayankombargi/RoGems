{"ast":null,"code":"import'./Services.css';import NavBar from'../NavBar/NavBar';import React,{useState,useEffect}from'react';import{useNavigation}from'react-router-dom';import axios from'axios';import{motion}from'framer-motion';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Services(){const[experience_url,setExperienceUrl]=useState('');const[experience,setExperience]=useState({rootPlaceId:'',name:'',url:'',icon:''});const handleExperienceUrlChange=event=>{setExperienceUrl(event.target.value);};// Function to call backend API function that takes argument experience_url if not empty\nconst handleInsertExperience=async()=>{try{if(experience_url){const fetchResponse=await axios.get('/app/experiences/fetch_data/',{params:{url:experience_url}});const{game_data,icon}=fetchResponse.data;setExperience({rootPlaceId:game_data.rootPlaceId,name:game_data.name,url:experience_url,icon:icon});console.log(\"Place ID:\",experience.rootPlaceId);console.log(\"Name:\",experience.name);console.log(\"URL:\",experience.url);console.log(\"Icon:\",experience.icon);const response=await axios.post('/app/experiences/insert/',experience);if(response.status===201){console.log(\"Experience inserted successfully\");setExperienceUrl('');setExperience({rootPlaceId:'',name:'',url:'',icon:''});}else{console.error(\"Error inserting experience:\",response.statusText);}}else{console.error(\"Experience URL is empty\");}}catch(error){console.error(\"Error inserting experience:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"services\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},children:/*#__PURE__*/_jsx(\"h1\",{children:\" Services \"})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},className:\"services-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"services-list\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"insert-experience\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Insert Experience\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"experience-input-ui\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Experience URL\",onChange:handleExperienceUrlChange,className:\"experience-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleInsertExperience,className:\"insert-button\",children:\"Insert\"})]})]})})})]});}export default Services;","map":{"version":3,"names":["NavBar","React","useState","useEffect","useNavigation","axios","motion","jsx","_jsx","jsxs","_jsxs","Services","experience_url","setExperienceUrl","experience","setExperience","rootPlaceId","name","url","icon","handleExperienceUrlChange","event","target","value","handleInsertExperience","fetchResponse","get","params","game_data","data","console","log","response","post","status","error","statusText","className","children","div","initial","opacity","scale","animate","exit","transition","duration","type","placeholder","onChange","onClick"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/Services/Services.jsx"],"sourcesContent":["import './Services.css';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { motion } from 'framer-motion';\r\n\r\nfunction Services() {\r\n    const [experience_url, setExperienceUrl] = useState('');\r\n    const [experience, setExperience] = useState({ rootPlaceId: '', name: '', url: '', icon: '' });\r\n    const handleExperienceUrlChange = (event) => {\r\n        setExperienceUrl(event.target.value);\r\n    }\r\n\r\n    // Function to call backend API function that takes argument experience_url if not empty\r\n    const handleInsertExperience = async () => {\r\n        try {\r\n            if (experience_url){\r\n                \r\n                const fetchResponse = await axios.get('/app/experiences/fetch_data/', {params: { url: experience_url }});\r\n                const {game_data, icon} = fetchResponse.data;         \r\n\r\n                setExperience({\r\n                    rootPlaceId: game_data.rootPlaceId,\r\n                    name: game_data.name,\r\n                    url: experience_url,\r\n                    icon : icon,\r\n                });\r\n\r\n                console.log(\"Place ID:\", experience.rootPlaceId);\r\n                console.log(\"Name:\", experience.name);\r\n                console.log(\"URL:\", experience.url);\r\n                console.log(\"Icon:\", experience.icon);\r\n\r\n                const response = await axios.post('/app/experiences/insert/', experience);\r\n                if (response.status === 201) {\r\n                    console.log(\"Experience inserted successfully\");\r\n                    setExperienceUrl('');\r\n                    setExperience({ rootPlaceId: '', name: '', url: '', icon: '' });\r\n                } else {\r\n                    console.error(\"Error inserting experience:\", response.statusText);\r\n                }\r\n            } else {\r\n                console.error(\"Experience URL is empty\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error inserting experience:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"services\">\r\n            <NavBar />\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n            >\r\n                <h1> Services </h1>\r\n            </motion.div>\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n                className=\"services-content\"\r\n            >\r\n                <div className=\"services-list\">\r\n                    <div className=\"insert-experience\">\r\n                        <h2>Insert Experience</h2>\r\n                        <div className=\"experience-input-ui\">\r\n                            <input type=\"text\" placeholder=\"Experience URL\" onChange={handleExperienceUrlChange} className=\"experience-input\"/>\r\n                            <button onClick={handleInsertExperience} className='insert-button'>Insert</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Services;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
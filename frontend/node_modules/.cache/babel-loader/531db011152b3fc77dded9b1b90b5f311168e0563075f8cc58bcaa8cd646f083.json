{"ast":null,"code":"import'./Services.css';import NavBar from'../NavBar/NavBar';import React,{useState,useEffect}from'react';import{useNavigation}from'react-router-dom';import axios from'axios';import{motion}from'framer-motion';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Services(){const[experience_url,setExperienceUrl]=useState('');const handleExperienceUrlChange=event=>{setExperienceUrl(event.target.value);};// Function to call backend API function that takes argument experience_url if not empty\nconst handleInsertExperience=async()=>{try{if(experience_url){const fetchResponse=await axios.get('/app/experiences/fetch_data/',{params:{url:experience_url}});const{game_data,icon}=fetchResponse.data;const postData={id:game_data.id,name:game_data.name,description:game_data.description||\"\",creator:game_data.creator.name,url:game_data.url,genre:game_data.genre,genre_l1:game_data.genre_l1||\"\",genre_l2:game_data.genre_l2||\"\",icon:icon,created_at:game_data.created};const response=await axios.post('/app/experiences/insert/',postData);if(response.status===201){console.log(\"Experience inserted successfully\");}else{console.error(\"Error inserting experience:\",response.statusText);}}else{console.error(\"Experience URL is empty\");}}catch(error){console.error(\"Error inserting experience:\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"services\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},children:/*#__PURE__*/_jsx(\"h1\",{children:\" Services \"})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},className:\"services-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"services-list\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"insert-experience\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Insert Experience\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"experience-input-ui\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Experience URL\",onChange:handleExperienceUrlChange,className:\"experience-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleInsertExperience,className:\"insert-button\",children:\"Insert\"})]})]})})})]});}export default Services;","map":{"version":3,"names":["NavBar","React","useState","useEffect","useNavigation","axios","motion","jsx","_jsx","jsxs","_jsxs","Services","experience_url","setExperienceUrl","handleExperienceUrlChange","event","target","value","handleInsertExperience","fetchResponse","get","params","url","game_data","icon","data","postData","id","name","description","creator","genre","genre_l1","genre_l2","created_at","created","response","post","status","console","log","error","statusText","className","children","div","initial","opacity","scale","animate","exit","transition","duration","type","placeholder","onChange","onClick"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/Services/Services.jsx"],"sourcesContent":["import './Services.css';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { motion } from 'framer-motion';\r\n\r\nfunction Services() {\r\n    const [experience_url, setExperienceUrl] = useState('');\r\n\r\n    const handleExperienceUrlChange = (event) => {\r\n        setExperienceUrl(event.target.value);\r\n    }\r\n\r\n    // Function to call backend API function that takes argument experience_url if not empty\r\n    const handleInsertExperience = async () => {\r\n        try {\r\n            if (experience_url){\r\n                \r\n                const fetchResponse = await axios.get('/app/experiences/fetch_data/', {params: { url: experience_url }});\r\n                const {game_data, icon} = fetchResponse.data;\r\n\r\n                const postData = {\r\n                    id: game_data.id,\r\n                    name: game_data.name,\r\n                    description: game_data.description || \"\",\r\n                    creator: game_data.creator.name,\r\n                    url: game_data.url,\r\n                    genre : game_data.genre,\r\n                    genre_l1: game_data.genre_l1 || \"\",\r\n                    genre_l2: game_data.genre_l2 || \"\",\r\n                    icon: icon,\r\n                    created_at: game_data.created \r\n                };               \r\n                const response = await axios.post('/app/experiences/insert/', postData);\r\n                if (response.status === 201) {\r\n                    console.log(\"Experience inserted successfully\");\r\n                } else {\r\n                    console.error(\"Error inserting experience:\", response.statusText);\r\n                }\r\n            } else {\r\n                console.error(\"Experience URL is empty\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error inserting experience:\", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"services\">\r\n            <NavBar />\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n            >\r\n                <h1> Services </h1>\r\n            </motion.div>\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n                className=\"services-content\"\r\n            >\r\n                <div className=\"services-list\">\r\n                    <div className=\"insert-experience\">\r\n                        <h2>Insert Experience</h2>\r\n                        <div className=\"experience-input-ui\">\r\n                            <input type=\"text\" placeholder=\"Experience URL\" onChange={handleExperienceUrlChange} className=\"experience-input\"/>\r\n                            <button onClick={handleInsertExperience} className='insert-button'>Insert</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Services;"],"mappings":"AAAA,MAAO,gBAAgB,CACvB,MAAO,CAAAA,MAAM,KAAM,kBAAkB,CACrC,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAChB,KAAM,CAACC,cAAc,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEvD,KAAM,CAAAY,yBAAyB,CAAIC,KAAK,EAAK,CACzCF,gBAAgB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACxC,CAAC,CAED;AACA,KAAM,CAAAC,sBAAsB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACA,GAAIN,cAAc,CAAC,CAEf,KAAM,CAAAO,aAAa,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,8BAA8B,CAAE,CAACC,MAAM,CAAE,CAAEC,GAAG,CAAEV,cAAe,CAAC,CAAC,CAAC,CACxG,KAAM,CAACW,SAAS,CAAEC,IAAI,CAAC,CAAGL,aAAa,CAACM,IAAI,CAE5C,KAAM,CAAAC,QAAQ,CAAG,CACbC,EAAE,CAAEJ,SAAS,CAACI,EAAE,CAChBC,IAAI,CAAEL,SAAS,CAACK,IAAI,CACpBC,WAAW,CAAEN,SAAS,CAACM,WAAW,EAAI,EAAE,CACxCC,OAAO,CAAEP,SAAS,CAACO,OAAO,CAACF,IAAI,CAC/BN,GAAG,CAAEC,SAAS,CAACD,GAAG,CAClBS,KAAK,CAAGR,SAAS,CAACQ,KAAK,CACvBC,QAAQ,CAAET,SAAS,CAACS,QAAQ,EAAI,EAAE,CAClCC,QAAQ,CAAEV,SAAS,CAACU,QAAQ,EAAI,EAAE,CAClCT,IAAI,CAAEA,IAAI,CACVU,UAAU,CAAEX,SAAS,CAACY,OAC1B,CAAC,CACD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA/B,KAAK,CAACgC,IAAI,CAAC,0BAA0B,CAAEX,QAAQ,CAAC,CACvE,GAAIU,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CACzBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CACnD,CAAC,IAAM,CACHD,OAAO,CAACE,KAAK,CAAC,6BAA6B,CAAEL,QAAQ,CAACM,UAAU,CAAC,CACrE,CACJ,CAAC,IAAM,CACHH,OAAO,CAACE,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACJ,CAAE,MAAOA,KAAK,CAAE,CACZF,OAAO,CAACE,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACvD,CACJ,CAAC,CAED,mBACI/B,KAAA,QAAKiC,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrBpC,IAAA,CAACR,MAAM,GAAE,CAAC,cACVQ,IAAA,CAACF,MAAM,CAACuC,GAAG,EACPC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,GAAI,CAAE,CACpCC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAE,CAClCE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAE,CAC/BG,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAAAR,QAAA,cAE9BpC,IAAA,OAAAoC,QAAA,CAAI,YAAU,CAAI,CAAC,CACX,CAAC,cACbpC,IAAA,CAACF,MAAM,CAACuC,GAAG,EACPC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,GAAI,CAAE,CACpCC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAE,CAClCE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAE,CAC/BG,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAC9BT,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAE5BpC,IAAA,QAAKmC,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC1BlC,KAAA,QAAKiC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9BpC,IAAA,OAAAoC,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BlC,KAAA,QAAKiC,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAChCpC,IAAA,UAAO6C,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,gBAAgB,CAACC,QAAQ,CAAEzC,yBAA0B,CAAC6B,SAAS,CAAC,kBAAkB,CAAC,CAAC,cACnHnC,IAAA,WAAQgD,OAAO,CAAEtC,sBAAuB,CAACyB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjF,CAAC,EACL,CAAC,CACL,CAAC,CACE,CAAC,EACZ,CAAC,CAEd,CAEA,cAAe,CAAAjC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import'./Category.css';import React,{useEffect,useState}from'react';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function Category(_ref){let{experiences,genre,onSelectExperience}=_ref;const handleSelectExperience=experience_id=>{onSelectExperience(experience_id);};const[experiencesPerPage,setExperiencesPerPage]=useState(5);const[currentPage,setCurrentPage]=useState(1);const handlePreviousPage=()=>{currentPage===0?setCurrentPage(0):setCurrentPage(currentPage-1);};const handleNextPage=()=>{currentPage=Math.ceil(experiences.length/experiencesPerPage);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Category\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",genre,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-list\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePreviousPage,className:\"previous-button\",children:\" Prev \"}),experiences.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"experience-list\",children:experiences.filter(exp=>exp.genre===genre||exp.genre_l1===genre||exp.genre_l2===genre).slice(currentPage*experiencesPerPage-experiencesPerPage,currentPage*experiencesPerPage).map((exp,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSelectExperience(exp.rootPlaceId),className:\"experience-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:exp.icon,className:\"experience-icon\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"experience-name\",children:exp.name})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-list\",children:/*#__PURE__*/_jsx(\"h2\",{children:\" No experiences found \"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,className:\"next-button\",children:\" Next \"})]})]});}export default Category;","map":{"version":3,"names":["React","useEffect","useState","jsxs","_jsxs","jsx","_jsx","Category","_ref","experiences","genre","onSelectExperience","handleSelectExperience","experience_id","experiencesPerPage","setExperiencesPerPage","currentPage","setCurrentPage","handlePreviousPage","handleNextPage","Math","ceil","length","className","children","onClick","filter","exp","genre_l1","genre_l2","slice","map","index","rootPlaceId","src","icon","name"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/Category/Category.jsx"],"sourcesContent":["import './Category.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction Category({experiences, genre, onSelectExperience}) {\r\n\r\n    const handleSelectExperience = (experience_id) => {\r\n        onSelectExperience(experience_id);\r\n    }\r\n\r\n    const [experiencesPerPage, setExperiencesPerPage] = useState(5);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const handlePreviousPage = () => {\r\n        currentPage === 0 ? setCurrentPage(0) : setCurrentPage(currentPage - 1);\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n        currentPage = Math.ceil(experiences.length / experiencesPerPage);\r\n    }\r\n\r\n    return (\r\n        <div className='Category'>\r\n            <h1> {genre} </h1>\r\n            <div className='category-list'>\r\n                <button onClick={handlePreviousPage} className='previous-button'> Prev </button>\r\n                {experiences.length > 0 ? (\r\n                    <div className='experience-list'>\r\n                        {experiences\r\n                        .filter(exp => exp.genre === genre || exp.genre_l1 === genre || exp.genre_l2 === genre)\r\n                        .slice(currentPage * experiencesPerPage - experiencesPerPage, currentPage * experiencesPerPage)\r\n                        .map((exp, index) => (\r\n                                <div key={index} onClick={() => handleSelectExperience(exp.rootPlaceId)} className='experience-item'>\r\n                                    <img src={exp.icon} className='experience-icon' />\r\n                                    <h2 className='experience-name'>{exp.name}</h2>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className='empty-list'>\r\n                        <h2 > No experiences found </h2>\r\n                    </div>\r\n                )}\r\n                <button onClick={handleNextPage} className='next-button' > Next </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;"],"mappings":"AAAA,MAAO,gBAAgB,CACvB,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAGnD,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAA2C,IAA1C,CAACC,WAAW,CAAEC,KAAK,CAAEC,kBAAkB,CAAC,CAAAH,IAAA,CAEtD,KAAM,CAAAI,sBAAsB,CAAIC,aAAa,EAAK,CAC9CF,kBAAkB,CAACE,aAAa,CAAC,CACrC,CAAC,CAED,KAAM,CAACC,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAC/D,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAEjD,KAAM,CAAAgB,kBAAkB,CAAGA,CAAA,GAAM,CAC7BF,WAAW,GAAK,CAAC,CAAGC,cAAc,CAAC,CAAC,CAAC,CAAGA,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CAC3E,CAAC,CAED,KAAM,CAAAG,cAAc,CAAGA,CAAA,GAAM,CACzBH,WAAW,CAAGI,IAAI,CAACC,IAAI,CAACZ,WAAW,CAACa,MAAM,CAAGR,kBAAkB,CAAC,CACpE,CAAC,CAED,mBACIV,KAAA,QAAKmB,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrBpB,KAAA,OAAAoB,QAAA,EAAI,GAAC,CAACd,KAAK,CAAC,GAAC,EAAI,CAAC,cAClBN,KAAA,QAAKmB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1BlB,IAAA,WAAQmB,OAAO,CAAEP,kBAAmB,CAACK,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,QAAM,CAAQ,CAAC,CAC/Ef,WAAW,CAACa,MAAM,CAAG,CAAC,cACnBhB,IAAA,QAAKiB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAC3Bf,WAAW,CACXiB,MAAM,CAACC,GAAG,EAAIA,GAAG,CAACjB,KAAK,GAAKA,KAAK,EAAIiB,GAAG,CAACC,QAAQ,GAAKlB,KAAK,EAAIiB,GAAG,CAACE,QAAQ,GAAKnB,KAAK,CAAC,CACtFoB,KAAK,CAACd,WAAW,CAAGF,kBAAkB,CAAGA,kBAAkB,CAAEE,WAAW,CAAGF,kBAAkB,CAAC,CAC9FiB,GAAG,CAAC,CAACJ,GAAG,CAAEK,KAAK,gBACR5B,KAAA,QAAiBqB,OAAO,CAAEA,CAAA,GAAMb,sBAAsB,CAACe,GAAG,CAACM,WAAW,CAAE,CAACV,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAChGlB,IAAA,QAAK4B,GAAG,CAAEP,GAAG,CAACQ,IAAK,CAACZ,SAAS,CAAC,iBAAiB,CAAE,CAAC,cAClDjB,IAAA,OAAIiB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAEG,GAAG,CAACS,IAAI,CAAK,CAAC,GAFzCJ,KAGL,CACR,CAAC,CACL,CAAC,cAEN1B,IAAA,QAAKiB,SAAS,CAAC,YAAY,CAAAC,QAAA,cACvBlB,IAAA,OAAAkB,QAAA,CAAK,wBAAsB,CAAI,CAAC,CAC/B,CACR,cACDlB,IAAA,WAAQmB,OAAO,CAAEN,cAAe,CAACI,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE,QAAM,CAAQ,CAAC,EACxE,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAjB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
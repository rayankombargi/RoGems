{"ast":null,"code":"import\"./ExperiencePage.css\";import{motion}from\"framer-motion\";import{useState,useEffect}from\"react\";import{useParams}from\"react-router-dom\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ExperiencePage(){const{experience_id}=useParams();const[experience,setExperience]=useState(null);useEffect(()=>{const fetchExperience=async experience_id=>{try{const response=await axios.get(\"/api/experiences/fetch_experience/\".concat(experience_id,\"/\"));if(response.status===200){setExperience(response.data);}else{console.error(\"Error fetching experience:\",response.statusText);}}catch(error){console.error(\"Error fetching experience:\",error);}};fetchExperience(experience_id);},[experience_id]);// useEffect((experience) => {\n//     if (experience) {\n//         console.log(\"rootPlaceId: \", experience.rootPlaceId);\n//         console.log(\"name: \", experience.name);\n//         console.log(\"url: \", experience.url);\n//         console.log(\"description: \", experience.description);\n//         console.log(\"creator: \", experience.creator);\n//         console.log(\"genre: \", experience.genre);\n//         console.log(\"genre_l1: \", experience.genre_l1);\n//         console.log(\"genre_l2: \", experience.genre_l2);\n//         console.log(\"maxPlayers: \", experience.maxPlayers);\n//         console.log(\"created: \", experience.created);\n//         console.log(\"icon: \", experience.icon);\n//     }\n// }, [experience]);\nconst handleExperienceUrlDirection=experience_url=>{if(experience_url){window.open(experience_url,\"_blank\");}else{console.error(\"Experience URL is empty\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"ExperiencePage\",children:/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},className:\"experience-content\",children:experience===false?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"experience-name\",children:experience.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"experience-details\",children:[/*#__PURE__*/_jsx(\"img\",{src:experience.icon,className:\"experience-icon\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"experience-creator\",children:[\"Creator: \",experience.creator]}),/*#__PURE__*/_jsx(\"button\",{className:\"url-button\",onClick:handleExperienceUrlDirection.bind(this,experience.url),children:\"Visit on Roblox\"}),/*#__PURE__*/_jsx(\"p\",{className:\"experience-description\",children:experience.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"experience-minor-details\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"experience-genre\",children:[\"Genre: \",experience.genre]}),/*#__PURE__*/_jsxs(\"p\",{className:\"experience-genre-l1\",children:[\"Genre 2: \",experience.genre_l1]}),/*#__PURE__*/_jsxs(\"p\",{className:\"experience-genre-l2\",children:[\"Genre 3: \",experience.genre_l2]}),/*#__PURE__*/_jsxs(\"p\",{className:\"experience-maxPlayers\",children:[\"Max Players: \",experience.maxPlayers]}),/*#__PURE__*/_jsxs(\"p\",{className:\"experience-created\",children:[\"Created: \",new Date(experience.created).toLocaleDateString()]})]})]})]})})});}export default ExperiencePage;","map":{"version":3,"names":["motion","useState","useEffect","useParams","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ExperiencePage","experience_id","experience","setExperience","fetchExperience","response","get","concat","status","data","console","error","statusText","handleExperienceUrlDirection","experience_url","window","open","className","children","div","initial","opacity","scale","animate","exit","transition","duration","name","src","icon","creator","onClick","bind","url","description","genre","genre_l1","genre_l2","maxPlayers","Date","created","toLocaleDateString"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/ExperiencePage/ExperiencePage.jsx"],"sourcesContent":["import \"./ExperiencePage.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction ExperiencePage() {\r\n\r\n    const { experience_id } = useParams();\r\n    const [experience, setExperience] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchExperience = async (experience_id) => {\r\n            try {\r\n                const response = await axios.get(`/api/experiences/fetch_experience/${experience_id}/`);\r\n                if (response.status === 200) {\r\n                    setExperience(response.data);\r\n                } else {\r\n                    console.error(\"Error fetching experience:\", response.statusText);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching experience:\", error);\r\n            }\r\n        }\r\n        fetchExperience(experience_id);\r\n    }, [experience_id]);\r\n\r\n    // useEffect((experience) => {\r\n    //     if (experience) {\r\n    //         console.log(\"rootPlaceId: \", experience.rootPlaceId);\r\n    //         console.log(\"name: \", experience.name);\r\n    //         console.log(\"url: \", experience.url);\r\n    //         console.log(\"description: \", experience.description);\r\n    //         console.log(\"creator: \", experience.creator);\r\n    //         console.log(\"genre: \", experience.genre);\r\n    //         console.log(\"genre_l1: \", experience.genre_l1);\r\n    //         console.log(\"genre_l2: \", experience.genre_l2);\r\n    //         console.log(\"maxPlayers: \", experience.maxPlayers);\r\n    //         console.log(\"created: \", experience.created);\r\n    //         console.log(\"icon: \", experience.icon);\r\n    //     }\r\n    // }, [experience]);\r\n\r\n    const handleExperienceUrlDirection = (experience_url) => {\r\n        if (experience_url) {\r\n            window.open(experience_url, \"_blank\");\r\n        } else {\r\n            console.error(\"Experience URL is empty\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ExperiencePage\">\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n                className=\"experience-content\"\r\n            >\r\n                {experience === false ? (<div>Loading...</div>) :  \r\n                (\r\n                    <>\r\n                        <h1 className=\"experience-name\">{experience.name}</h1>\r\n                        <div className=\"experience-details\">\r\n                            <img src={experience.icon} className=\"experience-icon\" />\r\n                            <p className=\"experience-creator\">Creator: {experience.creator}</p>\r\n                            <button className=\"url-button\" onClick={handleExperienceUrlDirection.bind(this, experience.url)}>\r\n                                Visit on Roblox\r\n                            </button>\r\n                            <p className=\"experience-description\">{experience.description}</p>\r\n                            <div className=\"experience-minor-details\">\r\n                                <p className=\"experience-genre\">Genre: {experience.genre}</p>\r\n                                <p className=\"experience-genre-l1\">Genre 2: {experience.genre_l1}</p>\r\n                                <p className=\"experience-genre-l2\">Genre 3: {experience.genre_l2}</p>\r\n                                <p className=\"experience-maxPlayers\">Max Players: {experience.maxPlayers}</p>\r\n                                <p className=\"experience-created\">Created: {new Date(experience.created).toLocaleDateString()}</p>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </motion.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExperiencePage;"],"mappings":"AAAA,MAAO,sBAAsB,CAC7B,OAASA,MAAM,KAAQ,eAAe,CACtC,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,QAAS,CAAAC,cAAcA,CAAA,CAAG,CAEtB,KAAM,CAAEC,aAAc,CAAC,CAAGT,SAAS,CAAC,CAAC,CACrC,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAGlDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAa,eAAe,CAAG,KAAO,CAAAH,aAAa,EAAK,CAC7C,GAAI,CACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,sCAAAC,MAAA,CAAsCN,aAAa,KAAG,CAAC,CACvF,GAAII,QAAQ,CAACG,MAAM,GAAK,GAAG,CAAE,CACzBL,aAAa,CAACE,QAAQ,CAACI,IAAI,CAAC,CAChC,CAAC,IAAM,CACHC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEN,QAAQ,CAACO,UAAU,CAAC,CACpE,CACJ,CAAE,MAAOD,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACtD,CACJ,CAAC,CACDP,eAAe,CAACH,aAAa,CAAC,CAClC,CAAC,CAAE,CAACA,aAAa,CAAC,CAAC,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAY,4BAA4B,CAAIC,cAAc,EAAK,CACrD,GAAIA,cAAc,CAAE,CAChBC,MAAM,CAACC,IAAI,CAACF,cAAc,CAAE,QAAQ,CAAC,CACzC,CAAC,IAAM,CACHJ,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACJ,CAAC,CAED,mBACIhB,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC3BvB,IAAA,CAACN,MAAM,CAAC8B,GAAG,EACPC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,GAAI,CAAE,CACpCC,OAAO,CAAE,CAAEF,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAE,CAClCE,IAAI,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAE,CAAE,CAC/BG,UAAU,CAAE,CAAEC,QAAQ,CAAE,GAAI,CAAE,CAC9BT,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAE7BhB,UAAU,GAAK,KAAK,cAAIP,IAAA,QAAAuB,QAAA,CAAK,YAAU,CAAK,CAAC,cAE1CrB,KAAA,CAAAE,SAAA,EAAAmB,QAAA,eACIvB,IAAA,OAAIsB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAEhB,UAAU,CAACyB,IAAI,CAAK,CAAC,cACtD9B,KAAA,QAAKoB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAC/BvB,IAAA,QAAKiC,GAAG,CAAE1B,UAAU,CAAC2B,IAAK,CAACZ,SAAS,CAAC,iBAAiB,CAAE,CAAC,cACzDpB,KAAA,MAAGoB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAAC,WAAS,CAAChB,UAAU,CAAC4B,OAAO,EAAI,CAAC,cACnEnC,IAAA,WAAQsB,SAAS,CAAC,YAAY,CAACc,OAAO,CAAElB,4BAA4B,CAACmB,IAAI,CAAC,IAAI,CAAE9B,UAAU,CAAC+B,GAAG,CAAE,CAAAf,QAAA,CAAC,iBAEjG,CAAQ,CAAC,cACTvB,IAAA,MAAGsB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAEhB,UAAU,CAACgC,WAAW,CAAI,CAAC,cAClErC,KAAA,QAAKoB,SAAS,CAAC,0BAA0B,CAAAC,QAAA,eACrCrB,KAAA,MAAGoB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAAC,SAAO,CAAChB,UAAU,CAACiC,KAAK,EAAI,CAAC,cAC7DtC,KAAA,MAAGoB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,EAAC,WAAS,CAAChB,UAAU,CAACkC,QAAQ,EAAI,CAAC,cACrEvC,KAAA,MAAGoB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,EAAC,WAAS,CAAChB,UAAU,CAACmC,QAAQ,EAAI,CAAC,cACrExC,KAAA,MAAGoB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,eAAa,CAAChB,UAAU,CAACoC,UAAU,EAAI,CAAC,cAC7EzC,KAAA,MAAGoB,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAAC,WAAS,CAAC,GAAI,CAAAqB,IAAI,CAACrC,UAAU,CAACsC,OAAO,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAI,CAAC,EACjG,CAAC,EACL,CAAC,EACR,CACL,CACO,CAAC,CACZ,CAAC,CAEd,CAEA,cAAe,CAAAzC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import'./Discover.css';import{useState,useEffect}from'react';import{Route,useNavigate}from'react-router-dom';import{motion}from'framer-motion';import axios from'axios';import NavBar from'../NavBar/NavBar';import ExperiencePage from'../ExperiencePage/ExperiencePage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Discover(){const[experiences,setExperiences]=useState([]);const fetchExperiences=async()=>{try{const response=await axios.get('/api/experiences/fetch_experiences/');setExperiences(response.data);}catch(error){console.error('Error fetching experiences:',error);}};const handleSelectExperience=async experience_id=>{try{const response=await axios.get(\"api/experiences/fetch_experience/\",{params:{experience_id}});const experience=response.data;handleLoadExperiencePage(experience);console.log(\"Selected Experience:\",experience.name);}catch(error){console.error(\"Error selecting experience:\",error);}};const navigate=useNavigate();const handleLoadExperiencePage=selectedExperience=>{if(selectedExperience){navigate(\"/discover/\".concat(selectedExperience.rootPlaceId),{state:{icon:selectedExperience.icon,name:selectedExperience.name,url:selectedExperience.url,creator:selectedExperience.creator,description:selectedExperience.description,genre:selectedExperience.genre,genre_l1:selectedExperience.genre_l1,genre_l2:selectedExperience.genre_l2,maxPlayers:selectedExperience.maxPlayers,created:selectedExperience.created}});}};useEffect(()=>{fetchExperiences();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"Discover\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},children:/*#__PURE__*/_jsx(\"h1\",{children:\" Discover Experiences \"})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},className:\"discover-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"experience-category\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Test Experiences \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-list\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"previous-button\",children:\" Prev \"}),experiences.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"experience-list\",children:experiences.map((experience,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSelectExperience(experience.id),className:\"experience-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:experience.icon,className:\"experience-icon\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"experience-name\",children:experience.name})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-list\",children:/*#__PURE__*/_jsx(\"h2\",{children:\" No experiences found \"})}),/*#__PURE__*/_jsx(\"button\",{className:\"next-button\",children:\" Next \"})]})]})})]});}export default Discover;","map":{"version":3,"names":["useState","useEffect","Route","useNavigate","motion","axios","NavBar","ExperiencePage","jsx","_jsx","jsxs","_jsxs","Discover","experiences","setExperiences","fetchExperiences","response","get","data","error","console","handleSelectExperience","experience_id","params","experience","handleLoadExperiencePage","log","name","navigate","selectedExperience","concat","rootPlaceId","state","icon","url","creator","description","genre","genre_l1","genre_l2","maxPlayers","created","className","children","div","initial","opacity","scale","animate","exit","transition","duration","length","map","index","onClick","id","src"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/Discover/Discover.jsx"],"sourcesContent":["import './Discover.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from '../NavBar/NavBar';\r\nimport ExperiencePage from '../ExperiencePage/ExperiencePage';\r\n\r\nfunction Discover() {\r\n\r\n    const [experiences, setExperiences] = useState([]);\r\n    const fetchExperiences = async () => {\r\n        try {\r\n            const response = await axios.get('/api/experiences/fetch_experiences/');\r\n            setExperiences(response.data);\r\n        } catch(error) {\r\n            console.error('Error fetching experiences:', error);\r\n        }\r\n    }\r\n\r\n    const handleSelectExperience = async (experience_id) => {\r\n        try {\r\n            const response = await axios.get(\"api/experiences/fetch_experience/\", {params: { experience_id }});\r\n            const experience = response.data;\r\n            handleLoadExperiencePage(experience);\r\n            console.log(\"Selected Experience:\", experience.name);\r\n        } catch(error) {\r\n            console.error(\"Error selecting experience:\", error);\r\n        }\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n    const handleLoadExperiencePage = (selectedExperience) => {\r\n        if (selectedExperience) {\r\n            navigate(`/discover/${selectedExperience.rootPlaceId}`, {\r\n                state: {\r\n                    icon: selectedExperience.icon,\r\n                    name: selectedExperience.name,\r\n                    url: selectedExperience.url,\r\n                    creator: selectedExperience.creator,\r\n                    description: selectedExperience.description,\r\n                    genre: selectedExperience.genre,\r\n                    genre_l1: selectedExperience.genre_l1,\r\n                    genre_l2: selectedExperience.genre_l2,\r\n                    maxPlayers: selectedExperience.maxPlayers,\r\n                    created: selectedExperience.created\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchExperiences();\r\n    }, [])\r\n\r\n    return (\r\n        <div className='Discover'>\r\n            <NavBar />\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n            >\r\n                <h1> Discover Experiences </h1>\r\n            </motion.div>\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n                className='discover-content'\r\n            >\r\n                <div className='experience-category'>\r\n                    <h1> Test Experiences </h1>\r\n                    <div className='category-list'>\r\n                        <button className='previous-button'> Prev </button>\r\n                        {experiences.length > 0 ? (\r\n                            <div className='experience-list'>\r\n                                {experiences.map((experience, index) => (\r\n                                    <div key={index} onClick={() => handleSelectExperience(experience.id)} className='experience-item'>\r\n                                        <img src={experience.icon} className='experience-icon' />\r\n                                        <h2 className='experience-name'>{experience.name}</h2>\r\n                                    </div>\r\n                                ))}\r\n                                {/* <div className='experience-item'>\r\n                                    <img src={'https://tr.rbxcdn.com/180DAY-57bcbdcf22425abcb60b41c7574fa80b/512/512/Image/Png/noFilter'} className='experience-icon' />\r\n                                    <h2 className='experience-name'>ðŸ”¹ Jailbreak</h2>\r\n                                </div> */}\r\n                            </div>\r\n                        ) : (\r\n                            <div className='empty-list'>\r\n                                <h2 > No experiences found </h2>\r\n                            </div>\r\n                        )}\r\n                        <button className='next-button' > Next </button>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discover;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
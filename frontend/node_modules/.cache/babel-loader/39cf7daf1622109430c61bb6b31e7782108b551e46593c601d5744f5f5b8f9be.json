{"ast":null,"code":"import'./Discover.css';import{useState,useEffect}from'react';import{Route}from'react-router-dom';import{motion,AnimatePresence}from'framer-motion';import axios from'axios';import NavBar from'../NavBar/NavBar';import ExperiencePage from'../ExperiencePage/ExperiencePage';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Discover(){const[experiences,setExperiences]=useState([]);const fetchExperiences=async()=>{try{const response=await axios.get('/api/experiences/fetch_experiences/');setExperiences(response.data);}catch(error){console.error('Error fetching experiences:',error);}};useEffect(()=>{fetchExperiences();},[]);const[selectedExperience,setSelectedExperience]=useState(null);const[showExperiencePage,setShowExperiencePage]=useState(false);const handleSelectExperience=experience_id=>{setSelectedExperience(experiences.find(exp=>exp.rootPlaceId===experience_id));setShowExperiencePage(true);};const handleCloseExperience=()=>{setSelectedExperience(null);setShowExperiencePage(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Discover\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},children:/*#__PURE__*/_jsx(\"h1\",{children:\" Discover Experiences \"})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},className:\"discover-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"experience-category\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Test Experiences \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-list\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"previous-button\",children:\" Prev \"}),experiences.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"experience-list\",children:experiences.map((exp,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSelectExperience(exp.rootPlaceId),className:\"experience-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:exp.icon,className:\"experience-icon\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"experience-name\",children:exp.name})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-list\",children:/*#__PURE__*/_jsx(\"h2\",{children:\" No experiences found \"})}),/*#__PURE__*/_jsx(\"button\",{className:\"next-button\",children:\" Next \"})]})]})})]}),/*#__PURE__*/_jsx(AnimatePresence,{children:showExperiencePage&&selectedExperience&&/*#__PURE__*/_jsx(ExperiencePage,{experience:selectedExperience,onClose:handleCloseExperience})})]});}export default Discover;","map":{"version":3,"names":["useState","useEffect","Route","motion","AnimatePresence","axios","NavBar","ExperiencePage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Discover","experiences","setExperiences","fetchExperiences","response","get","data","error","console","selectedExperience","setSelectedExperience","showExperiencePage","setShowExperiencePage","handleSelectExperience","experience_id","find","exp","rootPlaceId","handleCloseExperience","children","className","div","initial","opacity","scale","animate","exit","transition","duration","length","map","index","onClick","src","icon","name","experience","onClose"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/Discover/Discover.jsx"],"sourcesContent":["import './Discover.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from '../NavBar/NavBar';\r\nimport ExperiencePage from '../ExperiencePage/ExperiencePage';\r\n\r\nfunction Discover() {\r\n\r\n    const [experiences, setExperiences] = useState([]);\r\n    const fetchExperiences = async () => {\r\n        try {\r\n            const response = await axios.get('/api/experiences/fetch_experiences/');\r\n            setExperiences(response.data);\r\n        } catch(error) {\r\n            console.error('Error fetching experiences:', error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchExperiences();\r\n    }, [])\r\n\r\n    const [selectedExperience, setSelectedExperience] = useState(null);\r\n    const [showExperiencePage, setShowExperiencePage] = useState(false);\r\n\r\n    const handleSelectExperience = (experience_id) => {\r\n        setSelectedExperience(\r\n            experiences.find((exp) => exp.rootPlaceId === experience_id)\r\n        );\r\n        setShowExperiencePage(true);\r\n    };\r\n\r\n    const handleCloseExperience = () => {\r\n        setSelectedExperience(null);\r\n        setShowExperiencePage(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='Discover'>\r\n                <NavBar />\r\n                <motion.div\r\n                    initial={{ opacity: 0, scale: 0.7 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    exit={{ opacity: 1, scale: 0 }}\r\n                    transition={{ duration: 0.8 }}\r\n                >\r\n                    <h1> Discover Experiences </h1>\r\n                </motion.div>\r\n                <motion.div\r\n                    initial={{ opacity: 0, scale: 0.7 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    exit={{ opacity: 1, scale: 0 }}\r\n                    transition={{ duration: 0.8 }}\r\n                    className='discover-content'\r\n                >\r\n                    <div className='experience-category'>\r\n                        <h1> Test Experiences </h1>\r\n                        <div className='category-list'>\r\n                            <button className='previous-button'> Prev </button>\r\n                            {experiences.length > 0 ? (\r\n                                <div className='experience-list'>\r\n                                    {experiences.map((exp, index) => (\r\n                                        <div key={index} onClick={() => handleSelectExperience(exp.rootPlaceId)} className='experience-item'>\r\n                                            <img src={exp.icon} className='experience-icon' />\r\n                                            <h2 className='experience-name'>{exp.name}</h2>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <div className='empty-list'>\r\n                                    <h2 > No experiences found </h2>\r\n                                </div>\r\n                            )}\r\n                            <button className='next-button' > Next </button>\r\n                        </div>\r\n                    </div>\r\n                </motion.div>    \r\n            </div>\r\n            <AnimatePresence>\r\n                {showExperiencePage && selectedExperience && <ExperiencePage experience={selectedExperience} onClose={handleCloseExperience} />}\r\n            </AnimatePresence>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Discover;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
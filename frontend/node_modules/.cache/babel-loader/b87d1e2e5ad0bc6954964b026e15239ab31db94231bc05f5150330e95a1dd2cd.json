{"ast":null,"code":"import'./Discover.css';import{useState,useEffect}from'react';import{Route,useNavigate}from'react-router-dom';import{motion,AnimatePresence}from'framer-motion';import axios from'axios';import NavBar from'../NavBar/NavBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Discover(){const[experiences,setExperiences]=useState([]);const fetchExperiences=async()=>{try{const response=await axios.get('/api/experiences/fetch_experiences/');setExperiences(response.data);}catch(error){console.error('Error fetching experiences:',error);}};useEffect(()=>{fetchExperiences();},[]);const navigate=useNavigate();const handleSelectExperience=experience_id=>{navigate(\"/discover/\".concat(experience_id));};return/*#__PURE__*/_jsxs(\"div\",{className:\"Discover\",children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},children:/*#__PURE__*/_jsx(\"h1\",{children:\" Discover Experiences \"})}),/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,scale:0.7},animate:{opacity:1,scale:1},exit:{opacity:1,scale:0},transition:{duration:0.8},className:\"discover-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"experience-category\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Test Experiences \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-list\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"previous-button\",children:\" Prev \"}),experiences.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"experience-list\",children:experiences.map((exp,index)=>/*#__PURE__*/_jsxs(\"div\",{onClick:()=>handleSelectExperience(exp.rootPlaceId),className:\"experience-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:exp.icon,className:\"experience-icon\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"experience-name\",children:exp.name})]},index))}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-list\",children:/*#__PURE__*/_jsx(\"h2\",{children:\" No experiences found \"})}),/*#__PURE__*/_jsx(\"button\",{className:\"next-button\",children:\" Next \"})]})]})})]});}export default Discover;","map":{"version":3,"names":["useState","useEffect","Route","useNavigate","motion","AnimatePresence","axios","NavBar","jsx","_jsx","jsxs","_jsxs","Discover","experiences","setExperiences","fetchExperiences","response","get","data","error","console","navigate","handleSelectExperience","experience_id","concat","className","children","div","initial","opacity","scale","animate","exit","transition","duration","length","map","exp","index","onClick","rootPlaceId","src","icon","name"],"sources":["C:/Users/Rayan/Documents/VS Code WebDev/RobloxExperienceFinder/frontend/src/components/Discover/Discover.jsx"],"sourcesContent":["import './Discover.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route, useNavigate } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport axios from 'axios';\r\n\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nfunction Discover() {\r\n\r\n    const [experiences, setExperiences] = useState([]);\r\n    const fetchExperiences = async () => {\r\n        try {\r\n            const response = await axios.get('/api/experiences/fetch_experiences/');\r\n            setExperiences(response.data);\r\n        } catch(error) {\r\n            console.error('Error fetching experiences:', error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchExperiences();\r\n    }, [])\r\n\r\n    const navigate = useNavigate();\r\n    const handleSelectExperience = (experience_id) => {\r\n        navigate(`/discover/${experience_id}`);\r\n    };\r\n\r\n    return (\r\n        <div className='Discover'>\r\n            <NavBar />\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n            >\r\n                <h1> Discover Experiences </h1>\r\n            </motion.div>\r\n            <motion.div\r\n                initial={{ opacity: 0, scale: 0.7 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 1, scale: 0 }}\r\n                transition={{ duration: 0.8 }}\r\n                className='discover-content'\r\n            >\r\n                <div className='experience-category'>\r\n                    <h1> Test Experiences </h1>\r\n                    <div className='category-list'>\r\n                        <button className='previous-button'> Prev </button>\r\n                        {experiences.length > 0 ? (\r\n                            <div className='experience-list'>\r\n                                {experiences.map((exp, index) => (\r\n                                    <div key={index} onClick={() => handleSelectExperience(exp.rootPlaceId)} className='experience-item'>\r\n                                        <img src={exp.icon} className='experience-icon' />\r\n                                        <h2 className='experience-name'>{exp.name}</h2>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ) : (\r\n                            <div className='empty-list'>\r\n                                <h2 > No experiences found </h2>\r\n                            </div>\r\n                        )}\r\n                        <button className='next-button' > Next </button>\r\n                    </div>\r\n                </div>\r\n            </motion.div>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discover;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
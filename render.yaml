services:
  # Full-stack Django + React App
  - type: web
    name: roblox-experience-finder
    env: python
    region: oregon
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python health_check.py
      cd frontend && npm install && npm run build && cd ..
      python manage.py collectstatic --no-input
      python manage.py migrate
    startCommand: gunicorn --bind 0.0.0.0:$PORT --workers 1 --timeout 120 --max-requests 500 --max-requests-jitter 50 RobloxExperienceFinder.wsgi:application
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: NODE_VERSION
        value: 18
      - key: DATABASE_URL
        sync: false # This will use the environment variable you set manually
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: "*"
      - key: RENDER_EXTERNAL_URL
        sync: false # This will be auto-populated by Render
      - key: WEB_CONCURRENCY
        value: "1"
      - key: PYTHONUNBUFFERED
        value: "1"

  # Cron Jobs
  - type: cron
    name: daily-experiences
    env: python
    region: oregon
    schedule: "0 0 * * *" # Daily at midnight UTC
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: python manage.py daily_exps
    envVars:
      - key: DATABASE_URL
        sync: false # This will use the environment variable you set manually

  - type: cron
    name: weekly-cleanup
    env: python
    region: oregon
    schedule: "0 0 * * 0" # Weekly on Sunday at midnight UTC
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: python manage.py weekly_refresh_requests
    envVars:
      - key: DATABASE_URL
        sync: false # This will use the environment variable you set manually

  - type: cron
    name: weekly-experiences
    env: python
    region: oregon
    schedule: "0 0 * * 0" # Weekly on Sunday at midnight UTC
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: python manage.py weekly_exps
    envVars:
      - key: DATABASE_URL
        sync: false # This will use the environment variable you set manually

# No database section needed - using external Neon PostgreSQL
